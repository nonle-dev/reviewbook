:root,
[data-mdb-theme='light'] {
  // Note: Custom variable values only support SassScript inside `#{}`.

  // Colors
  //
  // Generate palettes for full colors, grays, and theme colors.

  @each $color, $value in $colors {
    #{$color}: #{$value};
  }

  @each $color, $value in $grays {
    gray-#{$color}: #{$value};
  }

  @each $color, $value in $theme-colors {
    #{$color}: #{$value};
  }

  @each $color, $value in $theme-colors-rgb {
    #{$color}-rgb: #{$value};
  }

  @each $color, $value in $theme-colors-text {
    #{$color}-text-emphasis: #{$value};
  }

  @each $color, $value in $theme-colors-bg-subtle {
    #{$color}-bg-subtle: #{$value};
  }

  @each $color, $value in $theme-colors-border-subtle {
    #{$color}-border-subtle: #{$value};
  }

  white-rgb: #{to-rgb($white)};
  black-rgb: #{to-rgb($black)};

  // Fonts

  // Note: Use `inspect` for lists so that quoted items keep the quotes.
  // See https://github.com/sass/sass/issues/2383#issuecomment-336349172
  font-sans-serif: #{inspect($font-family-sans-serif)};
  font-monospace: #{inspect($font-family-monospace)};
  gradient: #{$gradient};

  // Root and body
  // scss-docs-start root-body-variables
  @if $font-size-root != null {
    root-font-size: #{$font-size-root};
  }
  body-font-family: #{inspect($font-family-base)};
  @include rfs($font-size-base, body-font-size);
  body-font-weight: #{$font-weight-base};
  body-line-height: #{$line-height-base};
  @if $body-text-align != null {
    body-text-align: #{$body-text-align};
  }

  body-color: #{$body-color};
  body-color-rgb: #{to-rgb($body-color)};
  body-bg: #{$body-bg};
  body-bg-rgb: #{to-rgb($body-bg)};

  emphasis-color: #{$body-emphasis-color};
  emphasis-color-rgb: #{to-rgb($body-emphasis-color)};

  secondary-color: #{$body-secondary-color};
  secondary-color-rgb: #{to-rgb($body-secondary-color)};
  secondary-bg: #{$body-secondary-bg};
  secondary-bg-rgb: #{to-rgb($body-secondary-bg)};

  tertiary-color: #{$body-tertiary-color};
  tertiary-color-rgb: #{to-rgb($body-tertiary-color)};
  tertiary-bg: #{$body-tertiary-bg};
  tertiary-bg-rgb: #{to-rgb($body-tertiary-bg)};
  // scss-docs-end root-body-variables

  heading-color: #{$headings-color};

  link-color: #{$link-color};
  link-color-rgb: #{to-rgb($link-color)};
  link-decoration: #{$link-decoration};

  link-hover-color: #{$link-hover-color};
  link-hover-color-rgb: #{to-rgb($link-hover-color)};

  @if $link-hover-decoration != null {
    link-hover-decoration: #{$link-hover-decoration};
  }

  code-color: #{$code-color};
  highlight-color: #{$mark-color};
  highlight-bg: #{$mark-bg};

  // scss-docs-start root-border-var
  border-width: #{$border-width};
  border-style: #{$border-style};
  border-color: #{$border-color};
  border-color-translucent: #{$border-color-translucent};

  border-radius: #{$border-radius};
  border-radius-sm: #{$border-radius-sm};
  border-radius-lg: #{$border-radius-lg};
  border-radius-xl: #{$border-radius-xl};
  border-radius-xxl: #{$border-radius-xxl};
  border-radius-2xl: var(
    border-radius-xxl
  ); // Deprecated in v5.3.0 for consistency
  border-radius-pill: #{$border-radius-pill};
  // scss-docs-end root-border-var

  box-shadow: #{$box-shadow};
  box-shadow-sm: #{$box-shadow-sm};
  box-shadow-lg: #{$box-shadow-lg};
  box-shadow-inset: #{$box-shadow-inset};

  // Focus styles
  // scss-docs-start root-focus-variables
  focus-ring-width: #{$focus-ring-width};
  focus-ring-opacity: #{$focus-ring-opacity};
  focus-ring-color: #{$focus-ring-color};
  // scss-docs-end root-focus-variables

  // scss-docs-start root-form-validation-variables
  form-valid-color: #{$form-valid-color};
  form-valid-border-color: #{$form-valid-border-color};
  form-invalid-color: #{$form-invalid-color};
  form-invalid-border-color: #{$form-invalid-border-color};
  // scss-docs-end root-form-validation-variables
}

@if $enable-dark-mode {
  @include color-mode(dark, true) {
    color-scheme: dark;

    // scss-docs-start root-dark-mode-vars
    body-color: #{$body-color-dark};
    body-color-rgb: #{to-rgb($body-color-dark)};
    body-bg: #{$body-bg-dark};
    body-bg-rgb: #{to-rgb($body-bg-dark)};

    emphasis-color: #{$body-emphasis-color-dark};
    emphasis-color-rgb: #{to-rgb($body-emphasis-color-dark)};

    secondary-color: #{$body-secondary-color-dark};
    secondary-color-rgb: #{to-rgb($body-secondary-color-dark)};
    secondary-bg: #{$body-secondary-bg-dark};
    secondary-bg-rgb: #{to-rgb($body-secondary-bg-dark)};

    tertiary-color: #{$body-tertiary-color-dark};
    tertiary-color-rgb: #{to-rgb($body-tertiary-color-dark)};
    tertiary-bg: #{$body-tertiary-bg-dark};
    tertiary-bg-rgb: #{to-rgb($body-tertiary-bg-dark)};

    @each $color, $value in $theme-colors-text-dark {
      #{$color}-text-emphasis: #{$value};
    }

    @each $color, $value in $theme-colors-bg-subtle-dark {
      #{$color}-bg-subtle: #{$value};
    }

    @each $color, $value in $theme-colors-border-subtle-dark {
      #{$color}-border-subtle: #{$value};
    }

    heading-color: #{$headings-color-dark};

    link-color: #{$link-color-dark};
    link-hover-color: #{$link-hover-color-dark};
    link-color-rgb: #{to-rgb($link-color-dark)};
    link-hover-color-rgb: #{to-rgb($link-hover-color-dark)};

    code-color: #{$code-color-dark};
    highlight-color: #{$mark-color-dark};
    highlight-bg: #{$mark-bg-dark};

    border-color: #{$border-color-dark};
    border-color-translucent: #{$border-color-translucent-dark};

    form-valid-color: #{$form-valid-color-dark};
    form-valid-border-color: #{$form-valid-border-color-dark};
    form-invalid-color: #{$form-invalid-color-dark};
    form-invalid-border-color: #{$form-invalid-border-color-dark};
    // scss-docs-end root-dark-mode-vars
  }
}
